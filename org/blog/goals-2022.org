#+title: Open Source goals for 2022/2023
#+date: <2022-08-22 Mon>

Summer vacations is coming to an end and though I have left school for more than 10 years, I have kept a habit of setting my technical and learning goals in September. I set personal and professional goals in January.

* The past year in review

Let's review the past year briefly. It has been fruitful:

- The projects I am a part of (the [[https://github.com/aesara-devs][Aesara ecosystem]], [[https://github.com/blackjax-devs/blackjax][Blackjax]], [[https://github.com/pollsposition][Pollsposition]]) have made sensible progress and are gaining momentum.
- Working in close proximity with great people, including but not only (in handle alphabetical order) [[https://twitter.com/BrandonTWillard][@BrandonTWillard]], [[https://twitter.com/dgerlanc][@dgerlanc]], [[https://twitter.com/jeffreydenos][@jeffreydenos]] and [[https://twitter.com/junpenglao][@junpenglao]], has made me a better developer.
- Thanks to [[https://twitter.com/BrandonTWillard][@BrandonTWillard]] I have now fully transitioned from vim to emacs.
- I have picked up [[https://racket-lang.org/][Racket]];
- I learned about relational programming, in particular [[id:f4cf39be-6c6a-4a9d-804a-3879a98177bc][miniKanren]].
- My thoughts on efficient note-taking, knowledge sharing and what a "better Internet" would look like are getting clearer, thanks to the [[https://thetypicalset.com][typical set project]], which I set in motion this year.
- I predicted the results of the French presidential elections with [[https://twitter.com/alex_andorra][@alex_andorra]] and [[https://twitter.com/pollsposition][@pollsposition]] (although a serious injury in February prevented me from doing more). I went on TV the night of the election!

* Hello 2022/2023

Here are the goals that I would try to achieve this coming year:

- [[https://github.com/aesara-devs/aemcmc][AeMCMC]] can build samplers with 99% of models encountered in the wild;
- [[https://github.com/aesara-devs/aehmc][AeHMC]]’s NUTS sampler’s performance is on par with Blackjax’s;
- [[https://github.com/aesara-devs/aesara][Aesara]] uses [[id:0617e358-6824-43b5-a3a7-4ed2074000dc][e-graphs]] and equality saturation for its graph rewrites;
- [[https://github.com/blackjax-devs/blackjax][Blackjax]]’s V1 is released;
- The Blackjax paper is ready for submission;
- [[https://github.com/pythological/kanren][miniKanren’s python implementation]] [[file:solve-sudokus-kanren.org][solves sudoku grid]] almost as fast as the imperative solution;
- Implementation of something similar to [[https://github.com/mxgmn/WaveFunctionCollapse][WaveFunctionCollapse]] with miniKanren;
- The typical set is self-hosted on the most energy efficient stack possible.

And more generally improve thetypicalset’s design, navigation and overall content quality. I would like to learn some [[https://www.rust-lang.org/][Rust]] and learn more about internet protocols (why not implement a HTTP server in Rust?) if time allows.
