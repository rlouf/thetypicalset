#+title: Pico GPT2 in Aesara
#+PROPERTY: header-args :results output

#+begin_src python :session
import aesara.tensor as at
import numpy as np

def gelu(x):
    return 0.5 * x * (1 + at.tanh(at.sqrt(2 / np.pi)) * (x + 0.044715 * x ** 3))

x = at.scalar('x')
y = gelu(x)

import aesara
aesara.dprint(y)
#+end_src

#+RESULTS:
#+begin_example
Elemwise{mul,no_inplace} [id A]
 |Elemwise{mul,no_inplace} [id B]
 | |TensorConstant{0.5} [id C]
 | |x [id D]
 |Elemwise{add,no_inplace} [id E]
   |TensorConstant{1} [id F]
   |Elemwise{mul,no_inplace} [id G]
     |Elemwise{tanh,no_inplace} [id H]
     | |Elemwise{sqrt,no_inplace} [id I]
     |   |TensorConstant{0.6366197723675814} [id J]
     |Elemwise{add,no_inplace} [id K]
       |x [id D]
       |Elemwise{mul,no_inplace} [id L]
         |TensorConstant{0.044715} [id M]
         |Elemwise{pow,no_inplace} [id N]
           |x [id D]
           |TensorConstant{3} [id O]
#+end_example

#+begin_src python :session
x = at.vector('x')

def softmax(x):
    return at.exp(x) / at.sum(at.exp(x))

y  = softmax(x)
fn = aesara.function([x], y)
aesara.dprint(y)
aesara.dprint(fn)
#+end_src

#+RESULTS:
: Elemwise{true_div,no_inplace} [id A]
:  |Elemwise{exp,no_inplace} [id B]
:  | |x [id C]
:  |InplaceDimShuffle{x} [id D]
:    |Sum{acc_dtype=float64} [id E]
:      |Elemwise{exp,no_inplace} [id F]
:        |x [id C]
: Softmax{axis=None} [id A] 0
:  |x [id B]

#+begin_src python :session
def layer_norm(x, g, b, eps = 1e-5):
    mean = at.mean(x)
    var = at.var(x)
    return g * (x - mean) / at.sqrt(var + eps) + b

x = at.vector('x')
y = layer_norm(x, 1., 1.)
aesara.dprint(y)
#+end_src

#+RESULTS:
#+begin_example
Elemwise{add,no_inplace} [id A]
 |Elemwise{true_div,no_inplace} [id B]
 | |Elemwise{mul,no_inplace} [id C]
 | | |InplaceDimShuffle{x} [id D]
 | | | |TensorConstant{1.0} [id E]
 | | |Elemwise{sub,no_inplace} [id F]
 | |   |x [id G]
 | |   |InplaceDimShuffle{x} [id H]
 | |     |Elemwise{true_div,no_inplace} [id I] 'mean'
 | |       |Sum{acc_dtype=float64} [id J]
 | |       | |x [id G]
 | |       |Subtensor{int64} [id K]
 | |         |Elemwise{Cast{float64}} [id L]
 | |         | |Shape [id M]
 | |         |   |x [id G]
 | |         |ScalarConstant{0} [id N]
 | |InplaceDimShuffle{x} [id O]
 |   |Elemwise{sqrt,no_inplace} [id P]
 |     |Elemwise{add,no_inplace} [id Q]
 |       |Elemwise{true_div,no_inplace} [id R] 'var'
 |       | |Sum{axis=[0], acc_dtype=float64} [id S]
 |       | | |Elemwise{pow,no_inplace} [id T]
 |       | |   |Elemwise{sub,no_inplace} [id U]
 |       | |   | |x [id G]
 |       | |   | |Elemwise{true_div,no_inplace} [id V] 'mean'
 |       | |   |   |InplaceDimShuffle{x} [id W]
 |       | |   |   | |Sum{axis=[0], acc_dtype=float64} [id X]
 |       | |   |   |   |x [id G]
 |       | |   |   |InplaceDimShuffle{x} [id Y]
 |       | |   |     |Subtensor{int64} [id Z]
 |       | |   |       |Elemwise{Cast{float64}} [id BA]
 |       | |   |       | |Shape [id BB]
 |       | |   |       |   |x [id G]
 |       | |   |       |ScalarConstant{0} [id BC]
 |       | |   |InplaceDimShuffle{x} [id BD]
 |       | |     |TensorConstant{2.0} [id BE]
 |       | |Subtensor{int64} [id BF]
 |       |   |Elemwise{Cast{float64}} [id BG]
 |       |   | |Shape [id BH]
 |       |   |   |Elemwise{pow,no_inplace} [id T]
 |       |   |ScalarConstant{0} [id BI]
 |       |TensorConstant{1e-05} [id BJ]
 |InplaceDimShuffle{x} [id BK]
   |TensorConstant{1.0} [id BL]
#+end_example

#+begin_src python :session
def linear(x, w, b):
    return x @ w + b

def ffn(x, c_fc, c_proj):
    return linear(gelu(linear(x, *c_fc)), *c_proj)

def attention(q, k, v, mask):
    return softmax(q @ k.T / at.sqrt(q.shape[-1]) + mask) @ v

def mha(x, c_attn, c_proj, n_head):
    x = linear(x, *c_attn)
    qkv = at.split(x, 3, axis=-1)
    qkv_heads =
    causal_mask =
    out_heads =
    x =
    x = linear(x, *c_proj)
#+end_src
