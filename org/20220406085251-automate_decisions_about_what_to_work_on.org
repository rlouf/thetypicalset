:PROPERTIES:
:ID:       9debe0fb-a3e2-4017-a9af-72d90f54ab89
:END:
#+TITLE: Automate decisions about what to work on
#+CREATED: [2022-04-06 Wed 08:52]
#+LAST_MODIFIED: [2022-04-06 Wed 09:17]

When you have [[id:9980ae28-68d4-4e29-9248-d661ccd85ab8][many interests]] the process of choosing what to do next can be overwhelming. In particular when it comes to activities for which you have no external presure. For me this includes:
- Writing / completing / connecting [[id:949cbc09-832b-40da-b5b6-771a880f7be3][Zetteltasken]] notes
- Working on [[file:blog/index.org][blog posts]]
- Working on projects
- Elaborating on topics I've accumulated for creative writing
- What to read out of my reading list (although [[id:52c3a31f-0fff-49cd-a2bb-244bf0f6d040][each reading item could be made into a new note]])
- What open source projects to focus on a particular week

If there is a reason to prioritize a particular item, you do not need to choose. However, when there is nothing in particular that needs to be done, when there is no reason to prioritize an item over others, it does not matter how the next task is choosen. Making the computer chose for you helps you avoid the fatigue associated with [[https://en.wikipedia.org/wiki/Overchoice][overchoice]] which is frequent with knowldege workers. I have found this makes me more likely to be in a state of /flow/.

The tool of choice here is /spaced repetition/, which is mostly used to learn stuff, but can also be used as a way to develop a concept and refine it over time. [[https://ag91.github.io/blog/2020/09/04/the-poor-org-user-spaced-repetition/][this blog post]] describes how to do it with emacs:

#+begin_src elisp
(defun my/space-repeat-if-tag-spaced (e)
  "Resets the header on the TODO states and increases the date
according to a suggested spaced repetition interval."
  (let* ((spaced-rep-map '((0 . "++1d")
                          (1 . "++2d")
                          (2 . "++10d")
                          (3 . "++30d")
                          (4 . "++60d")
                          (5 . "++4m")))
         (spaced-key "spaced")
         (tags (org-get-tags nil t))
         (spaced-todo-p (member spaced-key tags))
         (repetition-n (first (cdr spaced-todo-p)))
         (n+1 (if repetition-n (+ 1 (string-to-number (substring repetition-n (- (length repetition-n) 1) (length repetition-n)))) 0))
         (spaced-repetition-p (alist-get n+1 spaced-rep-map))
         (new-repetition-tag (concat "repetition" (number-to-string n+1)))
         (new-tags (reverse (if repetition-n
                                (seq-reduce
                                 (lambda (a x) (if (string-equal x repetition-n) (cons new-repetition-tag a) (cons x a)))
                                 tags
                                 '())
                              (seq-reduce
                               (lambda (a x) (if (string-equal x spaced-key) (cons new-repetition-tag (cons x a)) (cons x a)))
                               tags
                               '())))))
    (if (and spaced-todo-p spaced-repetition-p)
      (progn
          ;; avoid infinitive looping
          (remove-hook 'org-trigger-hook 'my/space-repeat-if-tag-spaced)
          ;; reset to previous state
          (org-call-with-arg 'org-todo 'left)
          ;; schedule to next spaced repetition
          (org-schedule nil (alist-get n+1 spaced-rep-map))
          ;; rewrite local tags
          (org-set-tags new-tags)
          (add-hook 'org-trigger-hook 'my/space-repeat-if-tag-spaced))
        )))

(add-hook 'org-trigger-hook 'my/space-repeat-if-tag-spaced)
#+end_src

which we will need to adapt to work with zetteltasken notes in org-roam.

*Note:* We can turn the implementation details into a [[file:blog/index.org][blog post]], as [[id:4d227966-7567-4261-a90d-ce0b27b18615][blog posts are allowed to become stale]]. And use [[https://github.com/nobiot/org-transclusion][Org-transclusion]] to include related notes, including this one.
