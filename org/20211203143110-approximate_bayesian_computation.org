:PROPERTIES:
:ID:       0eefdc2c-544a-47b7-8e3b-05a3c196d2b3
:END:
#+title: Simulation-based inference
#+filetags: :public:
#+LAST_MODIFIED: [2022-01-16 Sun 17:05]

- tags :: [[id:4f97031f-68e8-49ed-b814-ae366b7886b6][Sampling]]

Algorithm based on that intuition from Rubin (?) that drawing samples from the posterior distribution was equivalent to simulate data from the prior predictive distribution and accept or reject the sample based on the distance to the observed data. You need two ingredients:

- A function to measure the /distance/ between the simulated data and the sample;
- A threshold $\epsilon$ above which we discard the proposal.

* Algorithms

- Approximate Bayesian Computation   n
- Sequential Neural Posterior Estimation from [[cite:&greenberg2019]]
- Sequential Neural Likelihood Estimation [[cite:&papamakarios2018]]
- Sequential Neural Ratio Estimation
  - ALLR [[cite:&hermans2020]]
  - SRE [[cite:&durkan2020]]

    #+begin_src latex :results raw
\begin{equation}
  \mathcal{F} = \int_{0}^{\infty} f(x) dx
\end{equation}
    #+end_src

    #+RESULTS:
    #+begin_export latex
    \begin{equation}
      \mathcal{F} = \int_{0}^{\infty} f(x) dx
    \end{equation}
    #+end_export

* References

Papers:
[[cite:&cranmer2020;&durkan2020;&greenberg2019;&papamakarios2018;&hermans2020;&lueckmann2017;&papamakarios2018a]]

Blog post:
[[cite:&cranmer2020a]]

Code:
 - [[https://github.com/mackelab/sbi/][SBI]] a python library (PyTorch) that implements ABS, SNLE, SNPE, SNRE
 -
